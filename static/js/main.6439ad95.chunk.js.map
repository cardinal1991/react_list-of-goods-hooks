{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","console","log","ALPHABET","sort","LENGTH","a","b","length","reverse","App","useState","NONE","reorderOptions","setReorderOptions","className","type","onClick","prevOptions","map","li","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,iEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAkBzB,OAdAI,QAAQC,IAAIJ,EAAUC,GAElBD,IAAaJ,EAASS,UACxBH,EAAaI,OAGXN,IAAaJ,EAASW,QACxBL,EAAaI,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGvCT,GACFC,EAAaS,UAGRT,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAMgB,EAAgB,WAC3B,MAA4CC,mBAAyB,CACnEb,SAAUJ,EAASkB,KACnBb,YAAY,IAFd,mBAAOc,EAAP,KAAuBC,EAAvB,KAiCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBF,EAAef,WAAaJ,EAASS,SAAW,GAAK,YAClFc,QAlCmB,WACzBH,EAAkB,CAChBhB,SAAUJ,EAASS,SACnBJ,YAAY,KA4BV,iCAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBF,EAAef,WAAaJ,EAASW,OAAS,GAAK,YACnFY,QAnCa,WACnBH,EAAkB,CAChBhB,SAAUJ,EAASW,OACnBN,YAAY,KA6BV,4BAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBF,EAAed,WAAa,GAAK,YACjEkB,QApCa,WACnBH,GAAkB,SAACI,GAAD,mBAAC,eACdA,GADa,IAEhBnB,YAAamB,EAAYnB,iBA8BvB,sBAQGc,EAAef,WAAaJ,EAASkB,OACN,IAA9BC,EAAed,aACjB,wBACEiB,KAAK,SACLD,UAAU,mBACVE,QAvCS,WACjBH,EAAkB,CAChBhB,SAAUJ,EAASkB,KACnBb,YAAY,KAiCR,sBAUJ,6BACE,6BACGH,EAAkBD,EAAiBkB,GACjCM,KAAI,SAACC,GAAD,OACH,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCvItCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6439ad95.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n  // sortowanie\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort();\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport const App: React.FC = () => {\n  const [reorderOptions, setReorderOptions] = useState<ReorderOptions>({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const sortAlphabetically = () => {\n    setReorderOptions({\n      sortType: SortType.ALPHABET,\n      isReversed: false,\n    });\n  };\n\n  const sortByLength = () => {\n    setReorderOptions({\n      sortType: SortType.LENGTH,\n      isReversed: false,\n    });\n  };\n\n  const reverseOrder = () => {\n    setReorderOptions((prevOptions) => ({\n      ...prevOptions,\n      isReversed: !prevOptions.isReversed,\n    }));\n  };\n\n  const resetOrder = () => {\n    setReorderOptions({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${reorderOptions.sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${reorderOptions.sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${reorderOptions.isReversed ? '' : 'is-light'}`}\n          onClick={reverseOrder}\n        >\n          Reverse\n        </button>\n\n        {((reorderOptions.sortType !== SortType.NONE)\n        || (reorderOptions.isReversed === true)) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={resetOrder}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, reorderOptions)\n            .map((li) => (\n              <li data-cy=\"Good\" key={li}>\n                {li}\n              </li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}